{"version":3,"sources":["pic/logo-ver-bg.png","functions/redirectWithTimer.js","components/logoPage.js","functions/navBarAnimation.js","components/welcomePage.js","components/transitScanPage.js","components/transitVirtualPage.js","functions/showModalBox.js","actions/changeState.js","components/scanPage.js","components/virtualPage.js","functions/getCubeValue.js","components/solvePage.js","components/navBar.js","components/modalBox.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","redirectWithTimer","props","path","time","timer","clearTimeout","setTimeout","history","push","LogoPage","document","querySelector","classList","add","this","className","src","require","alt","Component","navBarAnimation","currentPage","colorIndex","positionIndex","navElements","querySelectorAll","activeNavElement","navBorder","style","color","backgroundColor","body","clientWidth","left","WelcomePage","to","TransitScanPage","TransitVirtualPage","showModalBox","currentState","modalBox","modalBoxContent","modalScanSuccessfully","modalPleaseScan","modalNotSubmitted","display","changeState","type","ScanPage","submitCube","innerHTML","console","log","remove","id","height","width","ref","window","openCamera","onClick","connect","state","dispatch","VirtualPage","forceUpdateHandler","bind","forceUpdate","threeStart","getCubeValue","JSON","parse","sessionStorage","getItem","SolvePage","solveCube","a","valueToBeSubmitted","axios","post","result","get","data","NavBar","ModalBox","closeModalBox","App","exact","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initState","rootReducer","action","store","createStore","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iMAAAA,EAAOC,QAAU,IAA0B,yC,4PCiB5BC,EAjBW,SAACC,EAAOC,EAAMC,GACpC,IAAIC,EASAC,aAAaD,GANbA,EAAQE,YAAW,WACfL,EAAMM,QAAQC,KAAKN,KACpBC,ICYIM,G,wLAZPC,SAASC,cAAc,WAAWC,UAAUC,IAAI,gBAChDb,EAAkBc,KAAKb,MAAO,WAAY,O,+BAG1C,OACI,yBAAKc,UAAU,iBACX,yBAAKC,IAAKC,EAAQ,IAA2BC,IAAI,c,GAR1CC,c,QC4CRC,EAhDS,SAACC,GACrB,IAIIC,EACAC,EALEC,EAAcd,SAASe,iBAAiB,gBACxCC,EAAmBhB,SAASC,cAAc,uCAC1CgB,EAAYjB,SAASC,cAAc,cAKzC,OAAQU,GACJ,IAAK,UACDC,EAAa,UACbC,EAAgB,EAChB,MACJ,IAAK,OACDD,EAAa,UACbC,EAAgB,EAChB,MACJ,IAAK,UACDD,EAAa,UACbC,EAAgB,EAChB,MACJ,IAAK,QACDD,EAAa,UACbC,EAAgB,EAChB,MACJ,QACID,EAAa,UACbC,EAAgB,EA3Ba,oBA+BdC,GA/Bc,IA+BrC,2BAAoC,SACrBI,MAAMC,MAAQ,WAhCQ,8BAkCrCH,EAAiBE,MAAMC,MAAQP,EAC/BK,EAAUC,MAAME,gBAAkBR,EAE9BZ,SAASqB,KAAKC,YAAc,KAC5BL,EAAUC,MAAMK,KAAhB,wBAAwCV,EAAxC,+BACOb,SAASqB,KAAKC,YAAc,IACnCL,EAAUC,MAAMK,KAAhB,uBAAuCV,EAAvC,KAGAI,EAAUC,MAAMK,KAAhB,yCAAyDV,EAAzD,yBCjBOW,G,wLAnBPd,EAAgB,a,+BAGhB,OACI,yBAAKL,UAAU,eACX,mEACA,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAMoB,GAAI,gBACN,wCAEJ,kBAAC,IAAD,CAAMA,GAAI,mBACN,6C,GAbEhB,cCYXiB,G,wLAXPpC,EAAkBc,KAAKb,MAAO,QAAS,O,+BAGvC,OACI,6BACI,oE,GAPckB,cCafkB,E,kLAXPrC,EAAkBc,KAAKb,MAAO,WAAY,O,+BAG1C,OACI,6BACI,2E,GAPiBkB,a,QCwClBmB,EA5CM,SAACC,GAClB,IAAMC,EAAW9B,SAASC,cAAc,aAClC8B,EAAkB/B,SAASC,cAAc,oBACzC+B,EAAwBhC,SAASC,cAAc,0BAC/CgC,EAAkBjC,SAASC,cAAc,oBACzCiC,EAAoBlC,SAASC,cAAc,sBAKjD,OAHA6B,EAASZ,MAAMiB,QAAU,OACzBJ,EAAgBb,MAAMiB,QAAU,OAExBN,GACJ,IAAK,mBACDG,EAAsBd,MAAMiB,QAAU,OACtCF,EAAgBf,MAAMiB,QAAU,OAChCD,EAAkBhB,MAAMiB,QAAU,OAClC,MACJ,IAAK,aACDH,EAAsBd,MAAMiB,QAAU,OACtCF,EAAgBf,MAAMiB,QAAU,OAChCD,EAAkBhB,MAAMiB,QAAU,OAClC,MACJ,IAAK,eACDH,EAAsBd,MAAMiB,QAAU,OACtCF,EAAgBf,MAAMiB,QAAU,OAChCD,EAAkBhB,MAAMiB,QAAU,OAClC,MACJ,IAAK,OAOL,QACIL,EAASZ,MAAMiB,QAAU,OACzBJ,EAAgBb,MAAMiB,QAAU,OAChCH,EAAsBd,MAAMiB,QAAU,OACtCF,EAAgBf,MAAMiB,QAAU,OAChCD,EAAkBhB,MAAMiB,QAAU,SCtCjCC,EAAc,SAACP,GACxB,MAAO,CACHQ,KAAM,eACNR,aAAcA,ICIhBS,G,kNAKFC,WAAa,WAEmB,uBADVvC,SAASC,cAAc,cAC3BuC,WACV,EAAKjD,MAAM6C,YAAY,kBACvBK,QAAQC,IAAI,EAAKnD,MAAMsC,cACvBD,EAAa,qBAEbA,EAAa,e,kEAVjB5B,SAASC,cAAc,WAAWC,UAAUyC,OAAO,gBACnDjC,EAAgB,U,+BAahB,OACI,yBAAKL,UAAU,YACX,2BAAOuC,GAAG,YAAYC,OAAO,MAAMC,MAAM,MAAMC,IAAK,WAChDC,OAAOC,gBAEX,4BAAQL,GAAG,iBACX,yBAAKvC,UAAU,mBACX,uBAAGuC,GAAG,eAEV,yBAAKvC,UAAU,mBACX,4BAAQuC,GAAG,QAAX,aACA,4BAAQA,GAAG,YAAYM,QAAS9C,KAAKmC,YAArC,qB,GA3BG9B,cA+CR0C,eAZS,SAACC,GACrB,MAAO,CAAEvB,aAAcuB,EAAMvB,iBAGN,SAACwB,GACxB,MAAO,CACHjB,YAAa,SAACP,GACVwB,EAASjB,EAAYP,QAKlBsB,CAA6Cb,G,QC/CtDgB,G,wDACJ,aAAc,IAAD,8BACX,gBACKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAFf,E,iEAMXpD,KAAKqD,gB,0CAILzD,SAASC,cAAc,WAAWC,UAAUyC,OAAO,gBACnDjC,EAAgB,a,+BAIhB,OACE,yBAAKL,UAAU,eACb,2CACA,yBAAKuC,GAAG,mBACN,yBAAKA,GAAG,mBAEV,yBAAKG,IAAK,WAAYC,OAAOU,gBAC7B,yBAAKrD,UAAU,mBACb,qD,GAxBgBI,cA4CX0C,eAZS,SAACC,GACvB,MAAO,CAAEvB,aAAcuB,EAAMvB,iBAGJ,SAACwB,GAC1B,MAAO,CACLjB,YAAa,SAACP,GACZwB,EAASjB,EAAYP,QAKZsB,CAA6CG,G,0CC3C7CK,EARM,WAKjB,OADqBC,KAAKC,MAAMC,eAAeC,QAAQ,kBCKrDC,G,kNAKFC,U,sBAAY,8BAAAC,EAAA,yDACwB,mBAA5B,EAAK3E,MAAMsC,aADP,wBAEEsC,EAAqBR,IAFvB,SAGiBS,IAAMC,KAAK,2BAA4BF,GAHxD,cAGEG,EAHF,gBAIgBF,IAAMG,IAAI,kBAJ1B,cAKJ9B,QAAQC,IAAI4B,EAAOE,MALf,wBAOJ5C,EAAa,gBAPT,4C,kEAHR5B,SAASC,cAAc,WAAWC,UAAUyC,OAAO,gBACnDjC,EAAgB,W,+BAahB,OACI,yBAAKL,UAAU,aACX,4BAAQA,UAAU,YAAY6C,QAAS9C,KAAK6D,WAA5C,mB,GAlBQxD,cAqCT0C,eAZS,SAACC,GACrB,MAAO,CAAEvB,aAAcuB,EAAMvB,iBAGN,SAACwB,GACxB,MAAO,CACHjB,YAAa,SAACP,GACVwB,EAASjB,EAAYP,QAKlBsB,CAA6Ca,GCF7CS,G,6KAtCP,OACI,yBAAKpE,UAAU,UACX,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAASoB,GAAI,YACT,yBAAKpB,UAAU,eACX,yBAAKA,UAAU,SAAQ,uBAAGA,UAAU,iBACpC,yBAAKA,UAAU,uBAAf,gBACA,yBAAKA,UAAU,sBAAf,aAGR,kBAAC,IAAD,CAASoB,GAAI,SACT,yBAAKpB,UAAU,eACX,yBAAKA,UAAU,SAAQ,uBAAGA,UAAU,mBACpC,yBAAKA,UAAU,uBAAf,aACA,yBAAKA,UAAU,sBAAf,UAGR,kBAAC,IAAD,CAASoB,GAAI,YACT,yBAAKpB,UAAU,eACX,yBAAKA,UAAU,SAAQ,uBAAGA,UAAU,kBACpC,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,sBAAf,aAGR,kBAAC,IAAD,CAASoB,GAAI,UACT,yBAAKpB,UAAU,eACX,yBAAKA,UAAU,SAAQ,uBAAGA,UAAU,uBACpC,yBAAKA,UAAU,uBAAf,cACA,yBAAKA,UAAU,sBAAf,WAGR,yBAAKA,UAAU,oB,GAjCdI,cCsCNiE,G,kNApCXC,cAAgB,WACZ/C,EAAa,S,uDAGb,OACI,yBAAKvB,UAAU,YACX,yBAAKA,UAAU,aAAa6C,QAAS9C,KAAKuE,gBAC1C,yBAAKtE,UAAU,mBACX,yBAAKA,UAAU,gBAAgBuC,GAAG,yBAC9B,uBAAGvC,UAAU,qBAAb,gDACA,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAMoB,GAAI,SAAUyB,QAAS9C,KAAKuE,eAC9B,0CAIZ,yBAAKtE,UAAU,gBAAgBuC,GAAG,mBAC9B,uBAAGvC,UAAU,qBAAb,iDAEJ,yBAAKA,UAAU,gBAAgBuC,GAAG,qBAC9B,uBAAGvC,UAAU,qBAAb,0DACA,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAMoB,GAAI,QAASyB,QAAS9C,KAAKuE,eAC7B,8CAEJ,kBAAC,IAAD,CAAMlD,GAAI,WAAYyB,QAAS9C,KAAKuE,eAChC,uD,GA3BTlE,cCqCRmE,MA1Bf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKvE,UAAU,OACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwE,OAAK,EAACrF,KAAK,IAAIsF,UAAW/E,IACjC,kBAAC,IAAD,CAAOP,KAAK,WAAWsF,UAAWtD,IAClC,kBAAC,IAAD,CAAOhC,KAAK,eAAesF,UAAWpD,IACtC,kBAAC,IAAD,CAAOlC,KAAK,kBAAkBsF,UAAWnD,IACzC,kBAAC,IAAD,CAAOnC,KAAK,QAAQsF,UAAWxC,IAC/B,kBAAC,IAAD,CAAO9C,KAAK,WAAWsF,UAAWxB,IAClC,kBAAC,IAAD,CAAO9D,KAAK,SAASsF,UAAWd,KAElC,kBAAC,EAAD,MACA,kBAAC,EAAD,YCrBRe,EAAcC,QACW,cAA7BhC,OAAOiC,SAASC,UAEe,UAA7BlC,OAAOiC,SAASC,UAEhBlC,OAAOiC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzC,QACfmC,UAAUC,cAAcQ,YAI1BvD,QAAQC,IACN,iHAKE4C,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBlD,QAAQC,IAAI,sCAGR4C,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAAC,GACL3D,QAAQ2D,MAAM,4CAA6CA,M,oBChG3DC,EAAY,CACdxE,aAAc,qBAeHyE,EAZK,WAAgC,IAA/BlD,EAA8B,uDAAtBiD,EAAWE,EAAW,uCAG/C,OAFA9D,QAAQC,IAAIU,GACZX,QAAQC,IAAI6D,GACQ,iBAAhBA,EAAOlE,KACA,eACAe,EADP,CAEIvB,aAAc0E,EAAO1E,eAGtBuB,GCDLoD,EAAQC,YAAYH,GAE1BI,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GAAO,kBAAC,EAAD,OAAoBxG,SAAS4G,eAAe,SFOjE,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,GAAwB9D,OAAOiC,SAAS8B,MACpDC,SAAWhE,OAAOiC,SAAS+B,OAIvC,OAGFhE,OAAOiE,iBAAiB,QAAQ,WAC9B,IAAM5B,EAAK,UAAMyB,GAAN,sBAEP/B,IAgEV,SAAiCM,EAAOC,GAEtC4B,MAAM7B,EAAO,CACX8B,QAAS,CAAE,iBAAkB,YAE5BzB,MAAK,SAAA0B,GAEJ,IAAMC,EAAcD,EAASD,QAAQ5C,IAAI,gBAEnB,MAApB6C,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7B1C,OAAOiC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1Ba,OAAM,WACL1D,QAAQC,IACN,oEAvFAiF,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCjD,QAAQC,IACN,iHAMJ0C,EAAgBC,EAAOC,OE7B/BE,K","file":"static/js/main.27183fb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-ver-bg.cb4246eb.png\";","const redirectWithTimer = (props, path, time) => {\n    let timer;\n\n    const setTimer = () => {\n        timer = setTimeout(() => {\n            props.history.push(path);\n        }, time)\n    }\n\n    const clearTimer = () => {\n        clearTimeout(timer);\n    }\n\n    clearTimer();\n    setTimer();\n}\n\nexport default redirectWithTimer;","import React, { Component } from 'react';\nimport redirectWithTimer from '../functions/redirectWithTimer';\nimport './logoPage.css';\n\nclass LogoPage extends Component {\n    componentDidMount() {\n        document.querySelector('.navBar').classList.add('navBarHidden');\n        redirectWithTimer(this.props, '/welcome', 2000);\n    }\n    render() {\n        return (\n            <div className=\"logoContainer\">\n                <img src={require('../pic/logo-ver-bg.png')} alt=\"Logo\" />\n            </div>\n        )\n    }\n}\n\nexport default LogoPage;","const navBarAnimation = (currentPage) => {\n    const navElements = document.querySelectorAll(\".navElements\")\n    const activeNavElement = document.querySelector(\".navBarContent .active .navElements\");\n    const navBorder = document.querySelector(\".navBorder\");\n\n    let colorIndex;\n    let positionIndex;\n\n    switch (currentPage) {\n        case \"welcome\":\n            colorIndex = '#2881f5';\n            positionIndex = 0;\n            break;\n        case \"scan\":\n            colorIndex = '#e02b2b';\n            positionIndex = 1;\n            break;\n        case \"virtual\":\n            colorIndex = '#29c429';\n            positionIndex = 2;\n            break;\n        case \"solve\":\n            colorIndex = '#e08b2b';\n            positionIndex = 3;\n            break;\n        default:\n            colorIndex = '#2881f5';\n            positionIndex = 0;\n            break;\n    }\n\n    for (let navElement of navElements) {\n        navElement.style.color = \"#8f8f8f\";\n    }\n    activeNavElement.style.color = colorIndex;\n    navBorder.style.backgroundColor = colorIndex;\n\n    if (document.body.clientWidth > 1080) {\n        navBorder.style.left = `calc((160px * ${positionIndex}) + ((100vw - 1080px) / 2))`;\n    } else if (document.body.clientWidth > 768) {\n        navBorder.style.left = `calc(160px * ${positionIndex})`;\n    } else {\n        /* left: calc(((60px + 2 * ((100vw - 240px) / 8)) * positionIndex) + ((100vw - 240px) / 8) - 5px); */\n        navBorder.style.left = `calc(((60px + (25vw - 60px)) * ${positionIndex}) + (12.5vw - 35px))`;\n    }\n\n}\n\nexport default navBarAnimation;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport navBarAnimation from '../functions/navBarAnimation';\nimport './welcomePage.css';\n\nclass WelcomePage extends Component {\n    componentDidMount() {\n        navBarAnimation(\"welcome\");\n    }\n    render() {\n        return (\n            <div className=\"welcomePage\">\n                <p>Do you have a Rubik's Cube with you?</p>\n                <div className=\"btnContainerVer\">\n                    <Link to={'/transitScan'}>\n                        <button>Yes</button>\n                    </Link>\n                    <Link to={'/transitVirtual'}>\n                        <button>No</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WelcomePage;","import React, { Component } from 'react';\nimport redirectWithTimer from '../functions/redirectWithTimer';\nimport './transitPage.css';\n\nclass TransitScanPage extends Component {\n    componentDidMount() {\n        redirectWithTimer(this.props, '/scan', 2000);\n    }\n    render() {\n        return (\n            <div>\n                <p>Great!  Ready to scan your cube.</p>\n            </div>\n        )\n    }\n}\n\nexport default TransitScanPage;","import React, { Component } from 'react';\nimport redirectWithTimer from '../functions/redirectWithTimer';\nimport './transitPage.css';\n\nclass TransitVirtualPage extends Component {\n    componentDidMount() {\n        redirectWithTimer(this.props, '/virtual', 2000);\n    }\n    render() {\n        return (\n            <div>\n                <p>It's fine.  Let's try our virtual cube.</p>\n            </div>\n        )\n    }\n}\n\nexport default TransitVirtualPage;","const showModalBox = (currentState) => {\n    const modalBox = document.querySelector(\".modalBox\");\n    const modalBoxContent = document.querySelector(\".modalBoxContent\");\n    const modalScanSuccessfully = document.querySelector(\"#modalScanSuccessfully\");\n    const modalPleaseScan = document.querySelector(\"#modalPleaseScan\");\n    const modalNotSubmitted = document.querySelector(\"#modalNotSubmitted\");\n\n    modalBox.style.display = \"flex\";\n    modalBoxContent.style.display = \"flex\";\n\n    switch (currentState) {\n        case \"scanSuccessfully\":\n            modalScanSuccessfully.style.display = \"flex\";\n            modalPleaseScan.style.display = \"none\";\n            modalNotSubmitted.style.display = \"none\";\n            break;\n        case \"pleaseScan\":\n            modalScanSuccessfully.style.display = \"none\";\n            modalPleaseScan.style.display = \"flex\";\n            modalNotSubmitted.style.display = \"none\";\n            break;\n        case \"notSubmitted\":\n            modalScanSuccessfully.style.display = \"none\";\n            modalPleaseScan.style.display = \"none\";\n            modalNotSubmitted.style.display = \"flex\";\n            break;\n        case \"none\":\n            modalBox.style.display = \"none\";\n            modalBoxContent.style.display = \"none\";\n            modalScanSuccessfully.style.display = \"none\";\n            modalPleaseScan.style.display = \"none\";\n            modalNotSubmitted.style.display = \"none\";\n            break;\n        default:\n            modalBox.style.display = \"none\";\n            modalBoxContent.style.display = \"none\";\n            modalScanSuccessfully.style.display = \"none\";\n            modalPleaseScan.style.display = \"none\";\n            modalNotSubmitted.style.display = \"none\";\n            break;\n    }\n\n}\n\nexport default showModalBox;","export const changeState = (currentState) => {\n    return {\n        type: 'CHANGE_STATE',\n        currentState: currentState\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport navBarAnimation from '../functions/navBarAnimation';\nimport showModalBox from '../functions/showModalBox';\nimport { changeState } from '../actions/changeState';\nimport './scanPage.css';\n\nclass ScanPage extends Component {\n    componentDidMount() {\n        document.querySelector('.navBar').classList.remove('navBarHidden');\n        navBarAnimation(\"scan\");\n    }\n    submitCube = () => {\n        const sidesText = document.querySelector('#sidesText');\n        if (sidesText.innerHTML === \"scanned sides: 6/6\") {\n            this.props.changeState(\"Cube submitted\");\n            console.log(this.props.currentState);\n            showModalBox(\"scanSuccessfully\");\n        } else {\n            showModalBox(\"pleaseScan\");\n        }\n    }\n    render() {\n        return (\n            <div className=\"scanPage\">\n                <video id=\"cam_input\" height=\"480\" width=\"640\" ref={function () {\n                    window.openCamera()\n                }}></video>\n                <canvas id=\"canvasOutput\"></canvas>\n                <div className=\"highLightedText\">\n                    <p id=\"sidesText\"></p>\n                </div>\n                <div className=\"btnContainerHor\">\n                    <button id=\"scan\">Scan Side</button>\n                    <button id=\"notations\" onClick={this.submitCube}>Submit Cube</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n// Connect to Redux Store\nconst mapStateToProps = (state) => {\n    return { currentState: state.currentState };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeState: (currentState) => {\n            dispatch(changeState(currentState));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanPage);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport navBarAnimation from \"../functions/navBarAnimation\";\n//import virtualModel from '../functions/virtualModel';\nimport { changeState } from \"../actions/changeState\";\nimport \"./virtualPage.css\";\n\nclass VirtualPage extends Component {\n  constructor(){\n    super();\n    this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n  };\n\n  forceUpdateHandler(){\n    this.forceUpdate();\n  };\n\n  componentDidMount() {\n    document.querySelector(\".navBar\").classList.remove(\"navBarHidden\");\n    navBarAnimation(\"virtual\");\n  }\n  \n  render() {\n    return (\n      <div className=\"virtualPage\">\n        <p>Virtual Page</p>\n        <div id='canvasContainer'>\n          <div id=\"canvasVirtual\"></div>\n        </div>\n        <div ref={function() {window.threeStart()}}></div>\n        <div className=\"btnContainerVer\">\n          <button>Submit Cube</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Connect to Redux Store\nconst mapStateToProps = (state) => {\n  return { currentState: state.currentState };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeState: (currentState) => {\n      dispatch(changeState(currentState));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VirtualPage);\n","const getCubeValue = () => {\n    \n    // Return the colors of each of the sides of the cube.\n\n    const allNotations = JSON.parse(sessionStorage.getItem('allNotations'));\n    return (allNotations);\n}\n\nexport default getCubeValue;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport navBarAnimation from '../functions/navBarAnimation';\nimport showModalBox from '../functions/showModalBox';\nimport getCubeValue from '../functions/getCubeValue';\nimport { changeState } from '../actions/changeState';\nimport './solvePage.css';\n\nclass SolvePage extends Component {\n    componentDidMount() {\n        document.querySelector('.navBar').classList.remove('navBarHidden');\n        navBarAnimation(\"solve\");\n    }\n    solveCube = async () => {\n        if (this.props.currentState === \"Cube submitted\") {\n            const valueToBeSubmitted = getCubeValue();\n            const result = await axios.post(\"qubeai.fun/api/solveCube\", valueToBeSubmitted);\n            let result2 = await axios.get('qubeai.fun/api')\n            console.log(result.data);\n        } else {\n            showModalBox(\"notSubmitted\");\n        }\n    }\n    render() {\n        return (\n            <div className=\"solvePage\">\n                <button className=\"solveCube\" onClick={this.solveCube}>Solve Cube</button>\n            </div>\n        )\n    }\n}\n\n// Connect to Redux Store\nconst mapStateToProps = (state) => {\n    return { currentState: state.currentState };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeState: (currentState) => {\n            dispatch(changeState(currentState));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolvePage);","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './navBar.css';\n\nclass NavBar extends Component {\n    render() {\n        return (\n            <div className=\"navBar\">\n                <div className=\"navBarContent\">\n                    <NavLink to={'/welcome'}>\n                        <div className=\"navElements\">\n                            <div className=\"icons\"><i className=\"fas fa-home\"></i></div>\n                            <div className=\"desktopDescriptions\">Welcome Page</div>\n                            <div className=\"mobileDescriptions\">Welcome</div>\n                        </div>\n                    </NavLink>\n                    <NavLink to={'/scan'}>\n                        <div className=\"navElements\">\n                            <div className=\"icons\"><i className=\"fas fa-camera\"></i></div>\n                            <div className=\"desktopDescriptions\">Scan Cube</div>\n                            <div className=\"mobileDescriptions\">Scan</div>\n                        </div>\n                    </NavLink>\n                    <NavLink to={'/virtual'}>\n                        <div className=\"navElements\">\n                            <div className=\"icons\"><i className=\"fas fa-cubes\"></i></div>\n                            <div className=\"desktopDescriptions\">Go Virtual</div>\n                            <div className=\"mobileDescriptions\">Virtual</div>\n                        </div>\n                    </NavLink>\n                    <NavLink to={'/solve'}>\n                        <div className=\"navElements\">\n                            <div className=\"icons\"><i className=\"fas fa-calculator\"></i></div>\n                            <div className=\"desktopDescriptions\">Solve Cube</div>\n                            <div className=\"mobileDescriptions\">Solve</div>\n                        </div>\n                    </NavLink>\n                    <div className=\"navBorder\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport showModalBox from '../functions/showModalBox';\nimport './modalBox.css';\n\nclass ModalBox extends Component {\n    closeModalBox = () => {\n        showModalBox(\"none\");\n    }\n    render() {\n        return (\n            <div className=\"modalBox\">\n                <div className=\"darkScreen\" onClick={this.closeModalBox}></div>\n                <div className=\"modalBoxContent\">\n                    <div className=\"modalElements\" id=\"modalScanSuccessfully\">\n                        <p className=\"modalDescriptions\">Would you like our A.I. to SOLVE it for you?</p>\n                        <div className=\"btnContainerHor\">\n                            <Link to={'/solve'} onClick={this.closeModalBox}>\n                                <button>Yes</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"modalElements\" id=\"modalPleaseScan\">\n                        <p className=\"modalDescriptions\">Please scan all the sides before submission.</p>\n                    </div>\n                    <div className=\"modalElements\" id=\"modalNotSubmitted\">\n                        <p className=\"modalDescriptions\">Please SCAN or try our VIRTUAL Cube before submittion.</p>\n                        <div className=\"btnContainerHor\">\n                            <Link to={'/scan'} onClick={this.closeModalBox}>\n                                <button>Scan Cube</button>\n                            </Link>\n                            <Link to={'/virtual'} onClick={this.closeModalBox}>\n                                <button>Go Virtual</button>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ModalBox;","import React from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\n\n// Routes\nimport LogoPage from './components/logoPage';\nimport WelcomePage from './components/welcomePage';\nimport TransitScanPage from './components/transitScanPage';\nimport TransitVirtualPage from './components/transitVirtualPage';\nimport ScanPage from './components/scanPage';\nimport VirtualPage from './components/virtualPage';\nimport SolvePage from './components/solvePage';\n\n// Components\nimport NavBar from './components/navBar';\nimport ModalBox from './components/modalBox';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"pageContainer\">\n          <div className=\"contentContainer\">\n            <div className=\"wholePage\">\n              <Switch>\n                <Route exact path='/' component={LogoPage} />\n                <Route path='/welcome' component={WelcomePage} />\n                <Route path='/transitScan' component={TransitScanPage} />\n                <Route path='/transitVirtual' component={TransitVirtualPage} />\n                <Route path='/scan' component={ScanPage} />\n                <Route path='/virtual' component={VirtualPage} />\n                <Route path='/solve' component={SolvePage} />\n              </Switch>\n              <NavBar />\n              <ModalBox />\n            </div>\n          </div>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    currentState: \"Nothing submitted\"\n}\n\nconst rootReducer = (state = initState, action) => {\n    console.log(state);\n    console.log(action);\n    if (action.type === 'CHANGE_STATE') {\n        return {\n            ...state,\n            currentState: action.currentState\n        };\n    }\n    return state;\n}\n\nexport default rootReducer;","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Redux\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}><App /></Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}